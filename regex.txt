#Regular expressions are special sequences of characters that describe a pattern of text that is to be matched

\w: the “word character” class represents the regex range [A-Za-z0-9_], and it matches a single uppercase character, lowercase character, digit or underscore
\d: the “digit character” class represents the regex range [0-9], and it matches a single digit character
\s: the “whitespace character” class represents the regex range [ \t\r\n\f\v], matching a single space, tab, carriage return, line break, form feed, or vertical tab
!capital of them add not like \D = [^0-9]

\w{3} will match exactly 3 word characters
\w{4,7} will match at minimum 4 word characters and at maximum 7 word characters


Alternation, using the pipe symbol |, allows us to match the text preceding or following the |

Character sets, denoted by a pair of brackets [], let us match one character from a series of characters

Wildcards, represented by the period or dot ., will match any single character (letter, number, symbol or whitespace)

Ranges allow us to specify a range of characters in which we can make a match

Shorthand character classes like \w, \d and \s represent the ranges representing word characters, digit characters, and whitespace characters, respectively

Groupings, denoted with parentheses (), group parts of a regular expression together, and allows us to limit alternation to part of a regex

Fixed quantifiers, represented with curly braces {}, let us indicate the exact quantity or a range of quantity of a character we wish to match

Optional quantifiers, indicated by the question mark ?, allow us to indicate a character in a regex is optional, or can appear either 0 times or 1 time

The Kleene star, denoted with the asterisk *, is a quantifier that matches the preceding character 0 or more times

The Kleene plus, denoted by the plus +, matches the preceding character 1 or more times

The anchor symbols hat ^ and dollar sign $ are used to match text at the start and end of a string, respectively